plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'checkstyle'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.hamcrest:hamcrest-core:2.2'
	implementation 'org.wso2.appserver:wso2appserver-samples-tomcat-webapps-jdbc-data-source:5.3.0'
	implementation 'org.projectlombok:lombok:1.18.20'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//authentication security
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	testImplementation 'org.springframework.security:spring-security-test:5.6.2'

				//swagger2
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

				//Testing
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.3'
	testImplementation group: 'junit', name: 'junit', version: '4.12'
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.6.4'
	testImplementation group: 'com.jayway.jsonpath', name: 'json-path-assert', version: '2.2.0'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.1.210'

				//Liquibase
	implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.9.0'

				//JOOQ
	implementation group: 'org.jooq', name: 'jooq', version: '3.13.6'

}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}
jacoco {
	toolVersion = "0.8.7"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.9
			}
		}
	}
}

checkstyle {
	toolVersion = "7.8.1"
	config = rootProject.resources.text.fromFile("config/checkstyle/checkstyle.xml")
}
checkstyleMain {
	source ='src/main/java'
}
checkstyleTest {
	source ='src/test/java'
}

tasks.named('test') {
	useJUnitPlatform()
}