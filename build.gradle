plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'checkstyle'
//	id 'nu.studer.jooq' version '7.1.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.hamcrest:hamcrest-core:2.2'
	implementation 'org.wso2.appserver:wso2appserver-samples-tomcat-webapps-jdbc-data-source:5.3.0'
	implementation 'org.projectlombok:lombok:1.18.20'
	runtimeOnly 'org.postgresql:postgresql'
//	implementation "org.springframework.boot:spring-boot-starter-jooq:2.0.2.RELEASE"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

//	//authentication security
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.security:spring-security-test'

	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'

	// https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'

	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

				//Testing
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.3'

	// https://mvnrepository.com/artifact/junit/junit
	testImplementation group: 'junit', name: 'junit', version: '4.12'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.6.4'

	// https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path-assert
	testImplementation group: 'com.jayway.jsonpath', name: 'json-path-assert', version: '2.2.0'

	// https://mvnrepository.com/artifact/com.h2database/h2
	testImplementation group: 'com.h2database', name: 'h2', version: '2.1.210'

				//Liquibase
	// https://mvnrepository.com/artifact/org.liquibase/liquibase-core
	implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.9.0'

				//JOOQ
	// https://mvnrepository.com/artifact/org.jooq/jooq
	implementation group: 'org.jooq', name: 'jooq', version: '3.2.7'

//	implementation group: 'org.jooq', name: 'jooq-codegen-maven', version: '3.16.5'
//	// https://mvnrepository.com/artifact/org.springframework/spring-context
//	implementation group: 'org.springframework', name: 'spring-context', version: '5.2.2.RELEASE'
//	// https://mvnrepository.com/artifact/org.springframework/spring-jdbc
//	implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.2.2.RELEASE'

}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}
jacoco {
	toolVersion = "0.8.7"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.9
			}
		}
	}
}

checkstyle {
	toolVersion = "7.8.1"
	config = rootProject.resources.text.fromFile("config/checkstyle/checkstyle.xml")
}
checkstyleMain {
	source ='src/main/java'
}
checkstyleTest {
	source ='src/test/java'
}

tasks.named('test') {
	useJUnitPlatform()
}

//jooq {
//	version = '3.16.4'  // the default (can be omitted)
//	edition = nu.studer.gradle.jooq.JooqEdition.OSS  // the default (can be omitted)
//
//	configurations {
//		main {  // name of the jOOQ configuration
//			generateSchemaSourceOnCompilation = true  // default (can be omitted)
//
//			generationTool {
//				jdbc {
//					driver = 'org.postgresql.Driver'
//					url = 'jdbc:postgresql://localhost:5432/book_db'
//					user = 'postgres'
//					password = '123456'
//					properties {
//						property {
//							key = 'ssl'
//							value = 'true'
//						}
//					}
//				}
//				generator {
////					name = 'org.jooq.codegen.DefaultGenerator'
////					database {
////						name = 'org.jooq.meta.postgres.PostgresDatabase'
////						inputSchema = 'public'
////					}
////					target {
////						packageName = 'com.example.demoBook.jooq'
////						directory = 'src/main/java'  // default (can be omitted)
////					}
//					strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
//				}
//			}
//		}
//	}
//}
